/* Using Database yourname */
USE yourname;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Kiran', 'Giri', 100000, '14-01-22', 'QA'),
		(002, 'Rohan', 'Chandy', 80000, '14-01-22 ', 'Dev'),
		(003, 'Yash', 'Yadav', 300000, '14-01-22 ', 'Dev'),
		(004, 'Shreeva ', 'Timsinsa', 500000, '14-01-22 ', 'BA'),
		(005, 'Sudan', 'sharma', 500000, '14-06-18 , 'Lead'),
		(006, 'radhika', 'bk', 200000, '14-06-20 ', 'Admin'),
		(007, 'suman', 'rijal', 75000, '14-01-22 ', 'Dev'),
		(008, 'sampada', 'bista', 90000, '14-01-22 ', 'HR');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
/* ANSWERS */

/* Q-1 */

1. Select FIRST_NAME AS WORKER_NAME from Worker;

2. Select upper(FIRST_NAME) from Worker;

3. Select distinct DEPARTMENT from Worker;

4. Select substring(FIRST_NAME,1,3) from Worker;

5. Select INSTR(FIRST_NAME, BINARY'i') from Worker where FIRST_NAME = 'Kiran';

6. Select RTRIM(FIRST_NAME) from Worker;

7. Select LTRIM(DEPARTMENT) from Worker;

8. Select distinct length(DEPARTMENT) from Worker;

9. Select REPLACE(FIRST_NAME,'a','A') from Worker;

10. Select CONCAT(FIRST_NAME, ' ', LAST_NAME) AS 'COMPLETE_NAME' from Worker;

11. Select * from Worker order by FIRST_NAME asc;

12. Select * from Worker order by FIRST_NAME asc,DEPARTMENT desc;

13. Select * from Worker where FIRST_NAME in ('Vipul','Satish');

14. Select * from Worker where FIRST_NAME not in ('Vipul','Satish');

15.  Select * from Worker where DEPARTMENT like 'Admin%';

16. Select * from Worker where FIRST_NAME like '%a%';

17. Select * from Worker where FIRST_NAME like '%a';

18. Select * from Worker where FIRST_NAME like '_____h';

19. Select * from Worker where SALARY between 100000 and 500000;

20. Select * from Worker where year(JOINING_DATE) = 2022 and month(JOINING_DATE) = 14;

21. SELECT COUNT(*) FROM worker WHERE DEPARTMENT = 'Admin';

22.SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) As Worker_Name, Salary
     FROM worker 
     WHERE WORKER_ID IN 
     (SELECT WORKER_ID FROM worker 
     WHERE Salary BETWEEN 50000 AND 100000);

23. SELECT DEPARTMENT, count(WORKER_ID) No_Of_Workers 
FROM worker 
GROUP BY DEPARTMENT 
ORDER BY No_Of_Workers DESC;

24. SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE
FROM Worker W
INNER JOIN Title T
ON W.WORKER_ID = T.WORKER_REF_ID
AND T.WORKER_TITLE in ('Manager');

25. SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM Title
GROUP BY WORKER_TITLE, AFFECTED_FROM
HAVING COUNT(*) > 1;

26.  SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) <> 0;

27. SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) = 0;

28. SELECT * INTO WorkerClone FROM Worker;

29. (SELECT * FROM Worker)
INTERSECT
(SELECT * FROM WorkerClone);

30. SELECT * FROM Worker
MINUS
SELECT * FROM Title;

31. SELECT CURDATE();

32. SELECT * FROM Worker ORDER BY Salary DESC LIMIT 10;

33. SELECT Salary FROM Worker ORDER BY Salary DESC LIMIT n-1,1;

34. SELECT Salary
FROM Worker W1
WHERE 4 = (
 SELECT COUNT( DISTINCT ( W2.Salary ) )
 FROM Worker W2
 WHERE W2.Salary >= W1.Salary
 );

35. from Worker W, Worker W1 
where W.Salary = W1.Salary 
and W.WORKER_ID != W1.WORKER_ID;

36. Select max(Salary) from Worker 
where Salary not in (Select max(Salary) from Worker);

37. select FIRST_NAME, DEPARTMENT from worker W where W.DEPARTMENT='HR' 
union all 
select FIRST_NAME, DEPARTMENT from Worker W1 where W1.DEPARTMENT='HR';

38. (SELECT * FROM Worker)
INTERSECT
(SELECT * FROM WorkerClone);

39. SELECT *
FROM WORKER
WHERE WORKER_ID <= (SELECT count(WORKER_ID)/2 from Worker);

40. SELECT DEPARTMENT, COUNT(WORKER_ID) as 'Number of Workers' FROM Worker 
      GROUP BY DEPARTMENT HAVING COUNT(WORKER_ID) < 5;

41. SELECT DEPARTMENT, COUNT(DEPARTMENT) as 'Number of Workers' FROM Worker GROUP BY DEPARTMENT;

42. Select * from Worker where WORKER_ID = (SELECT max(WORKER_ID) from Worker);

43. Select * from Worker where WORKER_ID = (SELECT min(WORKER_ID) from Worker);

44. SELECT * FROM Worker WHERE WORKER_ID <=5
UNION
SELECT * FROM (SELECT * FROM Worker W order by W.WORKER_ID DESC) AS W1 WHERE W1.WORKER_ID <=5;

45. SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary from(SELECT max(Salary) as TotalSalary,DEPARTMENT from Worker group by DEPARTMENT) as TempNew 
Inner Join Worker t on TempNew.DEPARTMENT=t.DEPARTMENT 
 and TempNew.TotalSalary=t.Salary;

46. SELECT distinct Salary from worker a WHERE 3 >= (SELECT count(distinct Salary) from worker b WHERE a.Salary <= b.Salary) order by a.Salary desc;

47. SELECT distinct Salary from worker a WHERE 3 >= (SELECT count(distinct Salary) from worker b WHERE a.Salary >= b.Salary) order by a.Salary desc;

48. SELECT distinct Salary from worker a WHERE n >= (SELECT count(distinct Salary) from worker b WHERE a.Salary <= b.Salary) order by a.Salary desc;

49.  SELECT DEPARTMENT, sum(Salary) from worker group by DEPARTMENT;

50. SELECT FIRST_NAME, SALARY from Worker WHERE SALARY=(SELECT max(SALARY) from Worker);